<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ snmpNetworkDiscovery.xml
  ~
  ~ This work is free software; you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published
  ~ by the Free Software Foundation; either version 2 of the License,
  ~ or (at your option) any later version.
  ~
  ~ This work is distributed in the hope that it will be useful, but
  ~ WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program; if not, write to the Free Software
  ~ Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
  ~ USA
  ~
  ~ Copyright (c) 2010-2016 iTransformers Labs. All rights reserved.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
    <bean id="discoveryDepth" scope="prototype" class="java.lang.Integer" factory-method="parseInt"/>

    <!--bean id="snmpDiscoverer" class="net.itransformers.idiscover.v2.core.NetworkNodeDiscovererImpl">

        <property name="nodeDiscoverers">
            <map>
                <entry key="snmp" value-ref="snmpNodeDiscoverer"/>
            </map>
        </property>
        <property name="nodeDiscoverFilter" ref="simpleNodeDiscoveryFilter"/>


        <property name="nodeDiscoveryListeners">
            <list>
                <ref bean="sampleNodeDiscoveryListener"/>
                <ref bean="rawDataFileLogDiscoveryListener"/>
                <ref bean="deviceDataFileLogDiscoveryListener"/>
                <ref bean="ConnectionDetailsListener"/>

                <ref bean="GraphmlFileLogDiscoveryListener"/>
                <ref bean="Neo4JGraphmlLoggerLogDiscoveryListener"/>
                <ref bean="Neo4JGraphmlLoggerLogDiscoveryListener"/>
                ref bean="GraphmlFileLogGroovyDiscoveryListener"/
            </list>
        </property>
        <property name="networkDiscoveryListeners">
            <list>
                <ref bean="SnmpNetworkDiscoveryListener"/>
                <ref bean="PostNetworkDiscoveryListener"/>

            </list>
        </property>
    </bean!-->

    <bean id="eventExecutor" class="java.util.concurrent.Executors" factory-method="newFixedThreadPool">
        <constructor-arg value="5" type="int"/>
    </bean>
    <bean id="eventExecutorCompletionService" class="java.util.concurrent.ExecutorCompletionService">
        <constructor-arg ref="eventExecutor"/>
    </bean>
    <bean id="executorService" class="net.itransformers.idiscover.v2.core.parallel.PausableThreadPoolExecutor">
        <constructor-arg  value="200" type="int"/>
        <constructor-arg  value="500" type="int"/>
        <constructor-arg  value="0" type="long"/>
    </bean>

    <bean id="executorCompletionService" class="java.util.concurrent.ExecutorCompletionService">
        <constructor-arg  ref="executorService"/>
    </bean>

    <!--<bean-->
            <!--class="org.springframework.jmx.support.ConnectorServerFactoryBean"-->
            <!--depends-on="rmiRegistry">-->
        <!--<property name="objectName" value="connector:name=rmi" />-->
        <!--<property name="serviceUrl"-->
                  <!--value="service:jmx:rmi://localhost/jndi/rmi://localhost:10099/myconnector" />-->
        <!--<property name="environment">-->
            <!--&lt;!&ndash; the following is only valid when the sun jmx implementation is used &ndash;&gt;-->
            <!--<map>-->
                <!--<entry key="jmx.remote.x.password.file" value="etc/security/jmxremote.password"/>-->
                <!--<entry key="jmx.remote.x.access.file" value="etc/security/jmxremote.access"/>-->
            <!--</map>-->
        <!--</property>-->
    <!--</bean>-->

    <!--<bean id="rmiRegistry"-->
          <!--class="org.springframework.remoting.rmi.RmiRegistryFactoryBean">-->
        <!--<property name="port" value="10099" />-->
    <!--</bean>-->



    <!--<bean class="org.springframework.jmx.support.MBeanServerFactoryBean"/>-->

    <!--
      this bean needs to be eagerly pre-instantiated in order for the exporting to occur;
      this means that it must not be marked as lazily initialized
    -->
    <!--<bean class="org.springframework.jmx.export.MBeanExporter" lazy-init="false">-->
        <!--<property name="beans">-->
            <!--<map>-->
                <!--<entry key="bean:name=parallelSnmpDiscovery" value-ref="parallelSnmpDiscovery"/>-->
            <!--</map>-->
        <!--</property>-->
    <!--</bean>-->

    <bean id="discoveryWorkerFactory" class="net.itransformers.idiscover.v2.core.factory.DiscoveryWorkerFactory"/>
    <bean id="parallelSnmpDiscovery" class="net.itransformers.idiscover.v2.core.parallel.ParallelNetworkNodeDiscovererImpl">

        <property name="eventExecutorService" ref="eventExecutor"/>
        <property name="eventExecutorCompletionService" ref="eventExecutorCompletionService"/>
        <property name="executorService" ref="executorService"/>
        <property name="executorCompletionService" ref="executorCompletionService"/>
        <property name="discoveryWorkerFactory" ref="discoveryWorkerFactory"/>
        <property name="nodeDiscoverers">
            <map>
                <entry key="any" value-ref="plumberNodeDiscoverer"/>
                <entry key="subnet" value-ref="subnetNodeDiscoverer"/>
            </map>
        </property>
        <property name="nodeDiscoverFilter" ref="simpleNodeDiscoveryFilter"/>


        <property name="nodeDiscoveryListeners">
            <list>
                <ref bean="sampleNodeDiscoveryListener"/>
                <ref bean="rawDataFileLogDiscoveryListener"/>
                <ref bean="deviceDataFileLogDiscoveryListener"/>
                <ref bean="discoveredNodesListUpdaterListener"/>
                <!--ref bean="ConnectionDetailsListener"/-->

                <!--<ref bean="GraphmlFileLogDiscoveryListener"/>-->
                <!--<ref bean="Neo4JGraphmlLoggerLogDiscoveryListener"/>-->
                <!--<ref bean="Neo4JGraphmlLoggerLogDiscoveryListener"/>-->
                <!--ref bean="GraphmlFileLogGroovyDiscoveryListener"/-->
            </list>
        </property>
        <property name="nodeNeighbourDiscoveryListeners">
            <list>
                <ref bean="snmpNodeNeighbourDiscoveryListener"/>
                <!--<ref bean="PostNetworkDiscoveryListener"/>-->

            </list>
        </property>
        <property name="networkDiscoveryListeners">
            <list>
                <ref bean="SnmpNetworkDiscoveryListener"/>
                <!--<ref bean="PostNetworkDiscoveryListener"/>-->

            </list>
        </property>
    </bean>

    <bean id="SnmpNetworkDiscoveryListener"
          class="net.itransformers.idiscover.v2.core.listeners.network.SnmpNetworkDiscoveryListener">
        <property name="projectPath" ref="projectPath"/>
        <property name="labelDirName" ref="labelDirName"/>
        <property name="graphmlDataDirName" ref="graphmlUndirectedPath"/>
    </bean>

    <bean id="snmpNodeNeighbourDiscoveryListener" class="net.itransformers.idiscover.v2.core.listeners.neighbor.SnmpNodeNeighbourDiscoveryListener">
        <property name="projectPath" ref="projectPath"/>
        <property name="labelDirName" ref="labelDirName"/>
        <property name="graphmlDirName" ref="graphmlUndirectedPath"/>
        <property name="velocityTemplate" value="iDiscover/conf/xml/snmpGraphmlTemplate.vm"/>
    </bean>
    <bean id="MibLoaderHolder"
          class="net.itransformers.snmp2xml4j.snmptoolkit.MibLoaderHolder">
        <!--<constructor-arg  name="mibDir" type="file" value="snmptoolkit/mibs"/>-->
        <!--<constructor-arg  name="failOnError" type="boolean" value="true"/>-->
        <constructor-arg value="snmptoolkit/mibs"/>
        <constructor-arg value="true"/>
    </bean>


    <bean id="snmpNodeDiscoverer" class="net.itransformers.idiscover.v2.core.node_discoverers.snmpdiscoverer.SnmpSequentialNodeDiscoverer">
        <constructor-arg ref="discoveryHelperFactory"/>
        <constructor-arg value="PHYSICAL,NEXT_HOP,OSPF,ISIS,IPSEC,BGP,RIP,ADDITIONAL,IPV6"/>
        <constructor-arg ref="discoveryResourceManager"/>
        <constructor-arg ref="MibLoaderHolder"/>
        <constructor-arg value="false"/>

    </bean>

    <bean id="plumberNodeDiscoverer" class="net.itransformers.idiscover.v2.core.node_discoverers.PlumberNodeDiscoverer">
        <constructor-arg ref="icmpNodeDiscoverer"/>
        <constructor-arg ref="dnsNodeDiscoverer"/>
        <constructor-arg ref="snmpParallelNodeDiscoverer"/>
    </bean>

    <bean id="snmpParallelNodeDiscoverer" class="net.itransformers.idiscover.v2.core.node_discoverers.snmpdiscoverer.SnmpParallelNodeDiscoverer">
        <constructor-arg ref="discoveryHelperFactory"/>
        <constructor-arg value="PHYSICAL,NEXT_HOP,OSPF,ISIS,IPSEC,BGP,RIP,ADDITIONAL,IPV6"/>
        <constructor-arg ref="discoveryResourceManager"/>
        <constructor-arg ref="MibLoaderHolder"/>
        <constructor-arg name="useOnlyTheFirstSnmpBeingMatched" value="true"/>

    </bean>
    <bean id="subnetNodeDiscoverer" class="net.itransformers.idiscover.v2.core.node_discoverers.subnetDiscoverer.SubnetDiscoverer">

        <constructor-arg name="generateIPconnectionsForSubnetMembers" value="true"/>
        <constructor-arg name="subnetMaxMaskSize" value="24"/>

    </bean>

    <bean id="icmpNodeDiscoverer" class="net.itransformers.idiscover.v2.core.node_discoverers.icmp.IcmpDiscoverer">
        <constructor-arg  ref="discoveryResourceManager"/>
    </bean>

    <bean id="dnsNodeDiscoverer" class="net.itransformers.idiscover.v2.core.node_discoverers.dns.DnsNodeDiscoverer">
    </bean>

    <bean id="discoveryHelperFactory" class="net.itransformers.idiscover.discoveryhelpers.xml.XmlDiscoveryHelperFactory">
        <constructor-arg>
            <map>
                <entry key="projectPath" value-ref="projectPath"/>
                <entry key="fileName" value="iDiscover/conf/xml/discoveryParameters.xml"/>
            </map>
        </constructor-arg>
    </bean>
</beans>