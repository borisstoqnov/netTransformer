/*
 * iTransformer is an open source tool able to discover and transform
 *  IP network infrastructures.
 *  Copyright (C) 2012  http://itransformers.net
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.09.12 at 04:54:56 PM EEST 
//


package net.itransformers.idiscover.core.discoveryconfig;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the net.itransformers.idiscover.core.discoveryconfig package.
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _DiscoveryManager_QNAME = new QName("", "discovery-manager");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: net.itransformers.idiscover.core.discoveryconfig
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link DiscoveryManagerType }
     * 
     */
    public DiscoveryManagerType createDiscoveryManagerType() {
        return new DiscoveryManagerType();
    }

    /**
     * Create an instance of {@link DiscoveryHelperType }
     * 
     */
    public DiscoveryHelperType createDiscoveryHelperType() {
        return new DiscoveryHelperType();
    }

    /**
     * Create an instance of {@link ParametersType }
     * 
     */
    public ParametersType createParametersType() {
        return new ParametersType();
    }

    /**
     * Create an instance of {@link DiscoveryManagerListenerType }
     * 
     */
    public DiscoveryManagerListenerType createDiscoveryManagerListenerType() {
        return new DiscoveryManagerListenerType();
    }

    /**
     * Create an instance of {@link DiscoveryManagerListenersType }
     * 
     */
    public DiscoveryManagerListenersType createDiscoveryManagerListenersType() {
        return new DiscoveryManagerListenersType();
    }

    /**
     * Create an instance of {@link ManagementVlansType }
     * 
     */
    public ManagementVlansType createManagementVlansType() {
        return new ManagementVlansType();
    }

    /**
     * Create an instance of {@link ParamType }
     * 
     */
    public ParamType createParamType() {
        return new ParamType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DiscoveryManagerType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "discovery-manager")
    public JAXBElement<DiscoveryManagerType> createDiscoveryManager(DiscoveryManagerType value) {
        return new JAXBElement<DiscoveryManagerType>(_DiscoveryManager_QNAME, DiscoveryManagerType.class, null, value);
    }

}
