#
# neo4j_config.properties
#
# This work is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published
# by the Free Software Foundation; either version 2 of the License,
# or (at your option) any later version.
#
# This work is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
# USA
#
# Copyright (c) 2010-2016 iTransformers Labs. All rights reserved.
#

#===Memory mapped I/O settings===

#Each file in the Neo store can use memory mapped I/O for reading/writing.
#Best performance is achived if the full file can be memory mapped but if
#there isn't enough memory for that Neo will try and make the best use of
#the memory it gets (regions of the file that get accessed often will more
#likley be memory mapped).

#For high traversal speed it is important to have the nodestore.db and
#relationshipstore.db files.

neostore.nodestore.db.mapped_memory=25M
neostore.relationshipstore.db.mapped_memory=50M
neostore.propertystore.db.mapped_memory=90M
neostore.propertystore.db.index.mapped_memory=1M
neostore.propertystore.db.index.keys.mapped_memory=1M
neostore.propertystore.db.strings.mapped_memory=130M
neostore.propertystore.db.arrays.mapped_memory=130M


#===Cache settings===

#use adaptive caches YES|NO. Let Neo try make best use of avilable heap.
use_adaptive_cache=YES

#heap usage/max heap size ratio. Neo will increase caches while ratio
#is less and decrease if greater. Default 0.77 seems to be a good over
#all ratio of heap usage to avoid GC trashing. Larger heaps may allow for
#a higher ratio while tiny heaps may need even less.
adaptive_cache_heap_ratio=0.77

#how aggressive Neo will decrease caches once heap ratio reached
adaptive_cache_manager_decrease_ratio=1.15

#how aggresive Neo will increase caches if ratio isn't yet reached
adaptive_cache_manager_increase_ratio=1.1

#if no requests are made to Neo this is the amount of time in ms Neo will wait
#before it checks the heap usage and adapts the caches if needed
adaptive_cache_worker_sleep_time=3000

#minimum size (number of nodes) of node cache. If adaptive cache is in use
#node cache will not be decreased under this value
min_node_cache_size=0

#minimum size (number of relationships) of relationship cache. If adaptive
cache is in use relationship cache will not be decreased under this value
min_relationship_cache_size=0

#maximum size (number of nodes) of node cache. If adaptive cache is not in
#use the node cache will not be increased above this value
max_node_cache_size=1500

#maximum size (number of relationship) of node cache. If adaptive cache is
#not in use the relationship cache will not be increased above this value
max_relationship_cache_size=3500

enable_remote_shell = port=1234